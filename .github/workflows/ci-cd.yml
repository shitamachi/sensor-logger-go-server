name: Simple CI - Test & Build

on:
  push:
    branches: [ "main", "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

env:
  REGISTRY: ${{ vars.DOCKER_REGISTRY || 'your-private-registry.com' }}
  IMAGE_NAME: sensor-logger-server

jobs:
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4

    - name: 🐹 Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.4'
        cache: true

    - name: 📦 Install dependencies
      run: go mod download

    - name: 🧪 Run tests
      run: go test -v -race ./...

    - name: 🎯 Run go vet
      run: go vet ./...

  build-push:
    name: 🐳 Build & Push
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4

    - name: 🏷️ Generate tags
      id: meta
      run: |
        # 生成版本标签
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION=v$(date +%Y.%m.%d)-$(echo $GITHUB_SHA | cut -c1-7)
        fi
        
        # 生成镜像标签
        TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION"
        if [[ $GITHUB_REF == refs/heads/main ]] || [[ $GITHUB_REF == refs/heads/master ]]; then
          TAGS="$TAGS,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        fi
        
        echo "tags=$TAGS" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: 🔧 Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔑 Login to Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 🏗️ Build and Push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        build-args: VERSION=${{ steps.meta.outputs.version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: 📝 Summary
      run: |
        echo "## ✅ 构建完成" >> $GITHUB_STEP_SUMMARY
        echo "- **版本**: ${{ steps.meta.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **镜像**: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY 